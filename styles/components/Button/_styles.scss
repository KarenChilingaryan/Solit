@use "../../base/variables";
@import "../../base/mixins";

@mixin generate-button-styles {
  .button {
    background: variables.$main-white;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    border: 0;
    border-radius: 100px;
    padding: getButtonSizes(button-padding);
    width: getButtonSizes(button-width);
    height: getButtonSizes(button-height);

    @include font-style(getButtonSizes(button-text-fz), variables.$fw-700, getButtonSizes(button-text-fl), #fff);

    transition: 0.3s;
    cursor: pointer;
    &:hover {
      background: #105475;
      border: 1px solid #105475;
      @include font-style(
        getButtonSizes(button-hover-text-fz),
        variables.$fw-700,
        getButtonSizes(button-text-fl),
        #fff
      );
      transition: 0.3s;
    }
    @media only screen and (max-width: 1440px) and (min-width: 1024px) {
      padding: calcVWL(7) calcVWL(5);
      width: calcVWL(160);
      height: calcVWL(50);

      @include font-style(calcVWL(22), variables.$fw-700, calcVWL(24), #fff);

      &:hover {
        @include font-style(calcVWL(23), variables.$fw-700, calcVWL(24), #fff);
      }
    }
    @media (max-width: 768px) {
      // width: getButtonSizes(button-tablet-width);
      // height: getButtonSizes(button-tablet-height);
      // font-size: getButtonSizes(button-tablet-fz);
      border-radius: 5px;
      &:hover {
        @include font-style(getButtonSizes(button-tablet-fs), variables.$fw-500, getButtonSizes(button-text-fl), #fff);
      }
    }
  }

  .whiteButton {
    background: #fff;
    color: #105475;
    cursor: pointer;

    &:hover {
      background: variables.$main-white;
      border: 1px solid variables.$main-white;

      @include font-style(
        getButtonSizes(button-hover-text-fz),
        variables.$fw-500,
        getButtonSizes(button-text-fl),
        #fff
      );
      transition: 0.3s;
    }
    @media only screen and (max-width: 1440px) and (min-width: 1024px) {
      &:hover {
        @include font-style(calcVWL(23), variables.$fw-500, calcVWL(24), #fff);
      }
    }
    @media (max-width: 768px) {
      width: calcVW(400);
      height: calcVW(120);
      font-size: calcVW(45);

      &:hover {
        @include font-style(calcVW(58), variables.$fw-500, getButtonSizes(button-text-fl), #fff);
      }
    }
  }

  .lightBlue {
    background: variables.$light-blue;
    @include font-style(calcVW(20), variables.$fw-700, calcVW(24), variables.$white);
    border-radius: getButtonSizes(button-bold-blue-br);
    padding: getButtonSizes(button-bold-blue-padding);
    border: 1px solid variables.$light-blue;
    cursor: pointer;
    &:hover {
      background: variables.$main-white;

      border: 1px solid variables.$light-blue;
      @include font-style(calcVW(20), variables.$fw-700, calcVW(24), variables.$light-blue);
      transition: 0.3s;
    }
    @media only screen and (max-width: 1440px) and (min-width: 1024px) {
      @include font-style(calcVWL(20), variables.$fw-700, calcVWL(24), variables.$white);
      border-radius: calcVWL(8);
      padding: calcVWL(8) calcVWL(32);
      &:hover {
        @include font-style(calcVWL(20), variables.$fw-700, calcVWL(24), variables.$light-blue);
      }
    }
    @media (max-width: 768px) {
      &:hover {
        @include font-style(
          getButtonSizes(button-light-blue-tablet-fs),
          variables.$fw-500,
          getButtonSizes(button-text-fl)
        );
      }
    }
  }

  .grayTextBtn {
    width: unset;
    background: rgba(0, 0, 0, 0.32);
    @include font-style(
      getButtonSizes(button-text-light-blue-fz),
      variables.$fw-700,
      getButtonSizes(button-text-bold-blue-lh),
      rgba(255, 255, 255, 0.32)
    );
    border-radius: getButtonSizes(button-bold-blue-br);
    padding: getButtonSizes(button-bold-blue-padding);
    border: 1px solid rgba(255, 255, 255, 0.32);
    cursor: pointer;
    transition: 0.3s;
    // height: unset;
    &:hover {
      background: variables.$light-blue;
      @include font-style(
        getButtonSizes(button-text-light-blue-fz),
        variables.$fw-700,
        getButtonSizes(button-text-bold-blue-lh),
        variables.$black
      );
    }

    @media only screen and (max-width: 1440px) and (min-width: 1024px) {
      @include font-style(calcVWL(13), variables.$fw-700, calcVWL(19), rgba(255, 255, 255, 0.32));
      border-radius: calcVWL(8);
      padding: calcVWL(8) calcVWL(32);
      &:hover {
        @include font-style(calcVWL(13), variables.$fw-700, calcVWL(19), variables.$black);
      }
    }
    @media (max-width: 768px) {
      &:hover {
        @include font-style(
          getButtonSizes(button-light-blue-tablet-fs),
          variables.$fw-500,
          getButtonSizes(button-text-fl)
        );
      }
    }
    @media (max-width: 1024px) {
      .button {
        width: max-content;
        height: max-content;
        // @include font-style(calcVWT(20), variables.$fw-700, calcVWT(24));
        @include font-style(calcVWT(13), variables.$fw-700, calcVWT(19));
        border-radius: calcVWT(8);
      }
    }
  }

  .boldWhite {
    background: transparent;
    @include font-style(
      getButtonSizes(button-text-bold-blue-fz),
      variables.$fw-500,
      getButtonSizes(button-text-bold-blue-lh),
      variables.$light-blue
    );
    padding: getButtonSizes(button-bold-blue-padding);
    width: getButtonSizes(button-width-bold-blue);
    height: getButtonSizes(button-bold-blue-height);
    border: 1px solid variables.$light-blue;
    border-radius: calcVW(16);
    cursor: pointer;

    &:hover {
      background: transparent;
      @include font-style(
        getButtonSizes(button-text-bold-blue-fz),
        variables.$fw-500,
        getButtonSizes(button-text-bold-blue-lh)
      );
      transition: 0.3s;
    }
    img {
      width: calcVW(20);
      height: calcVW(20);
    }
    @media only screen and (max-width: 1440px) and (min-width: 1024px) {
      @include font-style(calcVWL(16), variables.$fw-500, calcVWL(19), variables.$light-blue);
      padding: calcVWL(8) calcVWL(32);
      width: calcVWL(279);
      height: calcVWL(76);
      border-radius: calcVW(16);
      &:hover {
        @include font-style(calcVWL(16), variables.$fw-500, calcVWL(19));
      }
      img {
        width: calcVWL(20);
        height: calcVWL(20);
      }
    }
    @media (max-width: 1024px) {
      width: max-content;
      height: max-content;
      @include font-style(calcVWT(18), variables.$fw-700, calcVWT(22), variables.$light-blue);
      &:hover {
        @include font-style(calcVWT(18), variables.$fw-700, calcVWT(22));
        img {
          filter: invert(0) sepia(0%) saturate(0%) hue-rotate(0) brightness(0) contrast(0);
        }
      }
      border-radius: calcVWT(16);
      padding: calcVWT(27) calcVWT(56);
      img {
        width: calcVWT(20);
        height: calcVWT(20);
      }
    }

    @media (max-width: 576px) {
      @include font-style(calcVWM(18), variables.$fw-700, calcVWM(22), variables.$light-blue);
      &:hover {
        @include font-style(calcVWM(18), variables.$fw-700, calcVWM(22));
        img {
          filter: invert(0) sepia(0%) saturate(0%) hue-rotate(0) brightness(0) contrast(0);
        }
      }
      border-radius: calcVWM(16);
      padding: calcVWM(27) calcVWM(56);
      img {
        width: calcVWM(20);
        height: calcVWM(20);
      }
    }
  }

  // To do refactoring

  .transparentOpposite {
    width: max-content;
    background: transparent;
    @include font-style(calcVW(20), variables.$fw-700, normal);
    border-radius: getButtonSizes(transparent-opposite-br);
    padding: getButtonSizes(transparent-opposite-p);
    letter-spacing: calcVW(2);
    border: 1px solid variables.$light-blue;
    height: unset;
    cursor: pointer;

    &:hover {
      background: variables.$light-blue;
      border: 1px solid variables.$light-blue;
      @include font-style(calcVW(20), variables.$fw-700, normal);
      transition: 0.3s;
    }

    @media only screen and (max-width: 1440px) and (min-width: 1024px) {
      @include font-style(calcVWL(20), variables.$fw-700, normal);
      border-radius: calcVWL(8);
      padding: calcVWL(16) calcVWL(32);
      letter-spacing: calcVWL(2);
      &:hover {
        @include font-style(calcVWL(20), variables.$fw-700, normal);
      }
    }

    @media (max-width: 1024px) {
      width: max-content;
      height: max-content;
      padding: calcVWT(16) calcVWT(32);
      @include font-style(calcVWT(20), variables.$fw-700, calcVWT(24));
      border-radius: calcVWT(8);
      &:hover {
        @include font-style(calcVWT(20), variables.$fw-700, calcVWT(24));
      }
    }

    @media (max-width: 576px) {
      width: max-content;
      height: max-content;
      padding: calcVWM(16) calcVWM(32);
      @include font-style(calcVWM(20), variables.$fw-700, calcVWM(24));
      border-radius: calcVWM(8);
      &:hover {
        @include font-style(calcVWM(20), variables.$fw-700, calcVWM(24));
      }
    }
  }
  .transparentOppositeBlack {
    color: variables.$black;
    &:hover {
      color: variables.$black;
    }
  }
  .transparentBlue {
    width: unset;
    background: variables.$transparent;
    @include font-style(
      getButtonSizes(button-text-bold-blue-fz),
      variables.$fw-700,
      getButtonSizes(button-text-bold-blue-lh),
      variables.$light-blue !important
    );
    border-radius: getButtonSizes(transparent-opposite-br);
    padding: getButtonSizes(button-bold-blue-padding);
    border: 1px solid variables.$light-blue;
    height: unset;
    cursor: pointer;

    &:hover {
      background: variables.$light-blue;
      border: 1px solid variables.$light-blue;
      @include font-style(
        getButtonSizes(button-text-bold-blue-fz),
        variables.$fw-700,
        getButtonSizes(button-text-bold-blue-lh),
        variables.$white !important
      );
      transition: 0.3s;
    }

    @media only screen and (max-width: 1440px) and (min-width: 1024px) {
      @include font-style(calcVWL(16), variables.$fw-700, calcVWL(19), variables.$light-blue !important);
      border-radius: calcVWL(8);
      padding: calcVWL(8) calcVWL(32);

      &:hover {
        @include font-style(calcVWL(16), variables.$fw-700, calcVWL(19), variables.$white !important);
      }
    }

    @media (max-width: 1024px) {
      width: max-content !important;
      height: max-content !important;
      padding: calcVWT(8) calcVWT(32);
      @include font-style(calcVWT(13) !important, variables.$fw-700 !important, calcVWT(16) !important);
      border-radius: calcVWT(8);
    }
    @media (max-width: 576px) {
      padding: calcVWM(8) calcVWM(32);
      @include font-style(calcVWM(13) !important, variables.$fw-500 !important, calcVWM(16) !important);
      border-radius: calcVWM(8);
      &:hover {
        @include font-style(calcVWM(16), variables.$fw-700, calcVWM(16), variables.$white !important);
      }
    }
  }

  .clear {
    padding: calcVW(26) calcVW(32) calcVW(26) calcVW(40);
    width: max-content;
    background: variables.$transparent;
    height: unset;
    cursor: pointer;

    @include font-style(
      getButtonSizes(button-text-bold-blue-fz),
      variables.$fw-700,
      getButtonSizes(button-text-bold-blue-lh),
      variables.$light-blue !important
    );

    &:hover {
      background: variables.$transparent;
      border: none;
      transition: 0.3s;
    }

    @media only screen and (max-width: 1440px) and (min-width: 1024px) {
      padding: calcVWL(26) calcVWL(32) calcVWL(26) calcVWL(40);

      @include font-style(calcVWL(16), variables.$fw-700, calcVWL(19), variables.$light-blue !important);
    }
    @media (max-width: 1024px) {
      padding: calcVWT(26) calcVWT(32) calcVWT(26) calcVWT(40);
      @include font-style(calcVWT(18), variables.$fw-700, calcVWT(20));
    }

    @media (max-width: 576px) {
      padding: calcVWM(26) calcVWM(32) calcVWM(26) calcVWM(40);
      @include font-style(calcVWM(18), variables.$fw-700, calcVWM(20));
    }
  }

  .lightBlueTech {
    background: variables.$light-blue;
    @include font-style(
      getButtonSizes(button-text-light-blue-fz),
      variables.$fw-700,
      getButtonSizes(button-text-bold-blue-lh),
      variables.$black
    );
    border-radius: getButtonSizes(button-bold-blue-br);
    padding: getButtonSizes(button-bold-blue-padding);
    border: 1px solid variables.$light-blue;
    cursor: pointer;
    height: unset;

    &:hover {
      background: variables.$light-blue;

      border: 1px solid variables.$light-blue;
      @include font-style(
        getButtonSizes(button-text-light-blue-fz),
        variables.$fw-700,
        getButtonSizes(button-text-bold-blue-lh),
        variables.$black
      );
      transition: 0.3s;
    }

    @media only screen and (max-width: 1440px) and (min-width: 1024px) {
      @include font-style(calcVWL(13), variables.$fw-700, calcVWL(18), variables.$black);
      border-radius: calcVWL(8);
      padding: calcVWL(8) calcVWL(32);

      &:hover {
        @include font-style(calcVWL(13), variables.$fw-700, calcVWL(18), variables.$black);
      }
    }

    @media (max-width: 1024px) {
      border-radius: calcVWT(16);
      padding: calcVWT(8) calcVWT(32);
      width: max-content !important;

      @include font-style(calcVWT(18), variables.$fw-400, calcVWT(24), variables.$black);

      &:hover {
        @include font-style(calcVWT(18), variables.$fw-400, calcVWT(24), variables.$black);
      }
    }

    @media (max-width: 576px) {
      padding: calcVWM(8) calcVWM(24);
      width: max-content !important;

      @include font-style(calcVWM(18), variables.$fw-400, calcVWM(24), variables.$black);

      &:hover {
        @include font-style(calcVWM(18), variables.$fw-400, calcVWM(24), variables.$black);
      }
    }
  }

  .grayTextBtnTech {
    @include font-style(
      getButtonSizes(button-text-light-blue-fz),
      variables.$fw-700,
      getButtonSizes(button-text-bold-blue-lh),
      rgba(255, 255, 255, 0.32)
    );

    background: rgba(0, 0, 0, 0.32);
    border-radius: getButtonSizes(button-bold-blue-br);
    padding: getButtonSizes(button-bold-blue-padding);
    border: 1px solid rgba(255, 255, 255, 0.32);
    cursor: pointer;
    height: unset;

    &:hover {
      background: variables.$light-blue;
      @include font-style(
        getButtonSizes(button-text-light-blue-fz),
        variables.$fw-700,
        getButtonSizes(button-text-bold-blue-lh),
        variables.$black
      );
      transition: 0.3s;
    }

    @media only screen and (max-width: 1440px) and (min-width: 1024px) {
      @include font-style(calcVWL(13), variables.$fw-700, calcVWL(18), rgba(255, 255, 255, 0.32));

      border-radius: calcVWL(8);
      padding: calcVWL(8) calcVWL(32);
      &:hover {
        @include font-style(calcVWL(13), variables.$fw-700, calcVWL(18), variables.$black);
      }
    }

    @media (max-width: 1024px) {
      border-radius: calcVWT(16);
      padding: calcVWT(8) calcVWT(32);
      width: max-content !important;
      height: max-content !important;
      @include font-style(calcVWT(18), variables.$fw-400, calcVWT(24), variables.$light-blue);

      &:hover {
        @include font-style(calcVWT(18), variables.$fw-400, calcVWT(24));
      }
    }

    @media (max-width: 576px) {
      padding: calcVWM(8) calcVWM(24);
      width: max-content !important;
      @include font-style(calcVWM(18), variables.$fw-400, calcVWM(24), variables.$light-blue);
      &:hover {
        @include font-style(calcVWM(18), variables.$fw-400, calcVWM(24));
      }
    }
  }
}
