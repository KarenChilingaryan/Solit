@use "../../base/variables";
@import "../../base/mixins";

@mixin generate-button-styles {
  .button {
    background: variables.$main-white;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    border: 0;
    border-radius: 100px;
    padding: getButtonSizes(button-padding);
    width: getButtonSizes(button-width);
    height: getButtonSizes(button-height);
    @include font-style(
      getButtonSizes(button-text-fz),
      variables.$fw-700,
      getButtonSizes(button-text-fl),
      #fff
    );

    transition: 0.3s;
    cursor: pointer;
    &:hover {
      background: #105475;
      border: 1px solid #105475;
      @include font-style(
        getButtonSizes(button-hover-text-fz),
        variables.$fw-700,
        getButtonSizes(button-text-fl),
        #fff
      );
      transition: 0.3s;
    }
    @media (max-width: 768px) {
      width: getButtonSizes(button-tablet-width);
      height: getButtonSizes(button-tablet-height);
      font-size: getButtonSizes(button-tablet-fz);
      border-radius: 5px;
      &:hover {
        @include font-style(
          getButtonSizes(button-tablet-fs),
          variables.$fw-500,
          getButtonSizes(button-text-fl),
          #fff
        );
      }
    }
  }

  .whiteButton {
    background: #fff;
    color: #105475;
    cursor: pointer;

    &:hover {
      background: variables.$main-white;

      border: 1px solid variables.$main-white;
      @include font-style(
        getButtonSizes(button-hover-text-fz),
        variables.$fw-500,
        getButtonSizes(button-text-fl),
        #fff
      );
      transition: 0.3s;
    }
    @media (max-width: 768px) {
      width: calcVW(400);
      height: calcVW(120);
      font-size: calcVW(45);
      &:hover {
        @include font-style(
          calcVW(58),
          variables.$fw-500,
          getButtonSizes(button-text-fl),
          #fff
        );
      }
    }
  }

  .boldBlue {
    background: variables.$light-blue;
    @include font-style(
      getButtonSizes(button-text-bold-blue-fz),
      variables.$fw-700,
      getButtonSizes(button-text-bold-blue-lh),
      #fff
    );
    padding: getButtonSizes(button-bold-blue-padding);
    // width: getButtonSizes(button-width-bold-blue);
    // height: getButtonSizes(button-bold-blue-height);
    cursor: pointer;
    &:hover {
      @include font-style(
        getButtonSizes(button-text-bold-blue-fz),
        variables.$fw-500,
        getButtonSizes(button-text-bold-blue-lh),
        #fff
      );
      transition: 0.3s;
    }
    @media (max-width: 768px) {
      &:hover {
        @include font-style(
          calcVW(58),
          variables.$fw-500,
          getButtonSizes(button-text-fl),
          #fff
        );
      }
    }
  }
  .lightBlue {
    background: variables.$light-blue;
    @include font-style(
      getButtonSizes(button-text-light-blue-fz),
      variables.$fw-700,
      getButtonSizes(button-text-bold-blue-lh),
      variables.$black
    );
    border-radius: getButtonSizes(button-bold-blue-br);
    padding: getButtonSizes(button-bold-blue-padding);
    border: 1px solid variables.$light-blue;
    cursor: pointer;
    height: unset;
    &:hover {
      background: variables.$light-blue;

      border: 1px solid variables.$light-blue;
      @include font-style(
        getButtonSizes(button-text-bold-blue-fz),
        variables.$fw-500,
        getButtonSizes(button-text-bold-blue-lh),
        #fff
      );
      transition: 0.3s;
    }

    @media (max-width: 768px) {
      &:hover {
        @include font-style(
          getButtonSizes(button-light-blue-tablet-fs),
          variables.$fw-500,
          getButtonSizes(button-text-fl)
        );
      }
    }
  }

  .grayTextBtn {
    width: unset;
    background: rgba(0, 0, 0, 0.32);
    @include font-style(
      getButtonSizes(button-text-light-blue-fz),
      variables.$fw-700,
      getButtonSizes(button-text-bold-blue-lh),
      rgba(255, 255, 255, 0.32)
    );
    border-radius: getButtonSizes(button-bold-blue-br);
    padding: getButtonSizes(button-bold-blue-padding);
    border: 1px solid rgba(255, 255, 255, 0.32);
    cursor: pointer;
    height: unset;
    &:hover {
      background: variables.$light-blue;
      @include font-style(
        getButtonSizes(button-text-light-blue-fz),
        variables.$fw-700,
        getButtonSizes(button-text-bold-blue-lh),
        variables.$black
      );
    }

    @media (max-width: 768px) {
      &:hover {
        @include font-style(
          getButtonSizes(button-light-blue-tablet-fs),
          variables.$fw-500,
          getButtonSizes(button-text-fl)
        );
      }
    }
  }

  .boldWhite {
    background: transparent;
    @include font-style(
      getButtonSizes(button-text-bold-blue-fz),
      variables.$fw-500,
      getButtonSizes(button-text-bold-blue-lh),
      variables.$light-blue
    );
    padding: getButtonSizes(button-bold-blue-padding);
    width: getButtonSizes(button-width-bold-blue);
    height: getButtonSizes(button-bold-blue-height);
    border: 1px solid variables.$light-blue;
    border-radius: calcVW(16);
    cursor: pointer;

    &:hover {
      background: transparent;
      @include font-style(
        getButtonSizes(button-text-bold-blue-fz),
        variables.$fw-500,
        getButtonSizes(button-text-bold-blue-lh),
        #fff
      );
      transition: 0.3s;
    }
    img {
      width: calcVW(20);
      height: calcVW(20);
    }
  }

  .transparent {
    background: transparent;
    @include font-style(
      getButtonSizes(button-text-bold-blue-fz),
      variables.$fw-500,
      getButtonSizes(button-text-bold-blue-lh),
      variables.$light-blue
    );
    border-radius: calcVW(8);
    padding: getButtonSizes(button-bold-blue-padding);
    border: 1px solid variables.$light-blue;
    cursor: pointer;
    &:hover {
      background: variables.$light-blue;

      @include font-style(
        getButtonSizes(button-text-bold-blue-fz),
        variables.$fw-500,
        getButtonSizes(button-text-bold-blue-lh)
      );
      transition: 0.3s;
    }
  }
  // To do refactoring

  .transparentOpposite {
    width: unset;
    background: variables.$transparent-black;
    @include font-style(
      getButtonSizes(button-text-bold-blue-fz),
      variables.$fw-500,
      getButtonSizes(button-text-bold-blue-lh)
    );
    border-radius: getButtonSizes(transparent-opposite-br);
    padding: getButtonSizes(transparent-opposite-p);
    border: 1px solid variables.$light-blue;
    height: unset;
    cursor: pointer;

    &:hover {
      background: transparent;
      border: 1px solid variables.$light-blue;
      @include font-style(
        getButtonSizes(button-text-bold-blue-fz),
        variables.$fw-500,
        getButtonSizes(button-text-bold-blue-lh)
      );
      transition: 0.3s;
    }
  }

  .transparentBlue {
    width: unset;
    background: variables.$transparent;
    @include font-style(
      getButtonSizes(button-text-bold-blue-fz),
      variables.$fw-500,
      getButtonSizes(button-text-bold-blue-lh),
      variables.$light-blue !important
    );
    border-radius: getButtonSizes(transparent-opposite-br);
    padding: getButtonSizes(button-bold-blue-padding);
    border: 1px solid variables.$light-blue;
    height: unset;
    cursor: pointer;

    &:hover {
      background: variables.$light-blue;
      border: 1px solid variables.$light-blue;
      @include font-style(
        getButtonSizes(button-text-bold-blue-fz),
        variables.$fw-500,
        getButtonSizes(button-text-bold-blue-lh),
        variables.$white !important
      );
      transition: 0.3s;
    }
  }

  .clear {
    width: max-content;
    background: variables.$transparent;
    height: unset;
    cursor: pointer;
    @include font-style(
      getButtonSizes(button-text-bold-blue-fz),
      variables.$fw-500,
      getButtonSizes(button-text-bold-blue-lh),
      variables.$light-blue !important
    );

    &:hover {
      background: variables.$transparent;
      border: none;
      @include font-style(
        getButtonSizes(button-text-bold-blue-fz),
        variables.$fw-500,
        getButtonSizes(button-text-bold-blue-lh),
        variables.$light-blue
      );
      transition: 0.3s;
    }
  }

  @media (max-width: 768px) {
    .button {
      width: getButtonSizes(transparent-tablet-button-width);
      height: getButtonSizes(transparent-tablet-button-height);
      font-size: getButtonSizes(transparent-tablet-button-fz);
    }
  }
}
