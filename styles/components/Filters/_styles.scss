@use "../../base/variables";
@import "../../base/mixins";

@mixin generate-filters-styles {
  .filtersMainWrapper {
    background-color: variables.$light-blue;

    .filtersWrapper {
      border-top: 2px solid variables.$main-green;
      border-bottom: 2px solid variables.$main-green;
      align-items: center;
      padding: getFiltersSizes(filters-padding);

      .filterText {
        @include font-style(
          getFiltersSizes(filters-fz),
          variables.$fw-400,
          getFiltersSizes(filters-lh)
        );
      }
    }
  }

  .filtersSection {
    @include center-flex();
  }

  .buttonWrapper {
    margin-top: getFiltersSizes(button-wrapper-mt);
    padding-bottom: getFiltersSizes(button-wrapper-pb);
    @include center-flex();

    .firstButton {
      margin-right: getFiltersSizes(button-first-mr);
      margin-left: getFiltersSizes(button-first-ml);
    }
  }

  @media (max-width: 768px) {
    .filtersSection {
      column-gap: getFiltersSizes(filtes-section-tablet-cg);
      row-gap: getFiltersSizes(filters-section-tablet-rg);
      padding-top: getFiltersSizes(filters-section-tablet-pt);
    }

    .filtersWrapper {
      padding: getFiltersSizes(fiters-wrapper-p) !important;
      flex-direction: column;
      align-items: flex-start !important;
      row-gap: getFiltersSizes(filters-wrapper-rg);

      :global(.ant-col) {
        column-gap: getFiltersSizes(filters-wrapper-global-cg);
        display: flex;
        flex-wrap: wrap;
        row-gap: getFiltersSizes(filters-wrapper-global-rg);
        font-size: getFiltersSizes(filters-wrapper-global-fz) !important;
        line-height: getFiltersSizes(filters-wrapper-global-lh) !important;

        button {
          margin: 0 !important;
          width: getFiltersSizes(filters-wrapper-button-width);
          height: getFiltersSizes(filters-wrapper-button-height);
          font-weight: 500;
          font-size: getFiltersSizes(filters-wrapper-button-fz);
          border: 1px solid rgba(255, 255, 255, 0.8);
          border-radius: 5px;
        }
      }

      :global(.ant-col):nth-last-child(1) {
        justify-content: start;
        padding: getFiltersSizes(filters-wrapper-global-p)
      }
    }
  }

  .filterCardMainWrapper {
    cursor: pointer;
    margin: getFiltersSizes(card-main-wrapper-margin);

    .coverImg {
      width: -webkit-fill-available;
      height: getFiltersSizes(card-cover-img-height);
      object-fit: cover;
      border-radius: 5px 5px 0 0;
    }

    .wrapper {
      background-color: #def1fa;
      padding: getFiltersSizes(wrapper-padding);
      border-radius: 0 0 5px 5px;

      .prjImg {
        width: getFiltersSizes(img-width);
        height: getFiltersSizes(img-height);
      }

      .textWrapper {
        margin-left: getFiltersSizes(text-wrapper-ml);
        margin-bottom: getFiltersSizes(text-wrapper-mb);

        .title {
          @include font-style(getFiltersSizes(title-fz),
            variables.$fw-400,
            getFiltersSizes(title-lh),
            variables.$light-blue
          );
        }

        .subTitle {
          width: getFiltersSizes(subtitle-width);
          @include font-style(
            getFiltersSizes(subtitle-fz),
            variables.$fw-400,
            getFiltersSizes(subtitle-lh),
            #6e90a0
          );
        }
      }

      .desc {
        @include font-style(getFiltersSizes(desc-fz),
          variables.$fw-400,
          getFiltersSizes(desc-lh),
          variables.$light-blue-80
        );
      }
    }

    @media (max-width: 768px) {
      flex: 0 0 40%;
      max-width: 40%;

      .coverImg {
        height: getFiltersSizes(card-tablet-cover-img-height);
      }

      .wrapper {
        padding: calcVW(30);

        .prjImg {
          width: getFiltersSizes(card-tablet-wrapper-width);
          height: getFiltersSizes(card-tablet-wrapper-height);
        }

        .textWrapper {
          .title {
            @include font-style(
              getFiltersSizes(text-tablet-title-fs),
              variables.$fw-400,
              getFiltersSizes(text-tablet-title-lh),
              variables.$light-blue
            );
            font-size: getFiltersSizes(text-tablet-title-fz);
          }

          .subTitle {
            height: calcVW(120);
            width: calcVW(400);
            @include font-style(
              calcVW(32),
              variables.$fw-400,
              calcVW(38),
              #6e90a0
            );
          }
        }

        .desc {
          margin: getFiltersSizes(tablet-desc-margin);
          font-size: getFiltersSizes(tablet-desc-fz);
          line-height: getFiltersSizes(tablet-desc-lh);
          @include font-style(
            getFiltersSizes(tablet-desc-fs),
            variables.$fw-400,
            getFiltersSizes(tablet-desc-lh),
            variables.$light-blue-80
          );
        }
      }
    }
  }
}

//to do refactor